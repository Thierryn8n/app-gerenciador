// Script para verificar configura√ß√µes de ambiente
const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configura√ß√µes de ambiente...');
console.log('=' .repeat(50));

// Verificar arquivo .env.local
const envPath = path.join(__dirname, '.env.local');
if (fs.existsSync(envPath)) {
    console.log('‚úÖ Arquivo .env.local encontrado');
    const envContent = fs.readFileSync(envPath, 'utf8');
    
    // Procurar por NEXT_PUBLIC_APP_URL
    const lines = envContent.split('\n');
    const appUrlLine = lines.find(line => line.startsWith('NEXT_PUBLIC_APP_URL='));
    
    if (appUrlLine) {
        const url = appUrlLine.split('=')[1];
        console.log(`üìç NEXT_PUBLIC_APP_URL: ${url}`);
        
        // Verificar se √© a URL correta
        if (url === 'https://app-gerenciador-pi.vercel.app') {
            console.log('‚úÖ URL est√° correta!');
        } else {
            console.log('‚ùå URL pode estar incorreta!');
            console.log('   Esperado: https://app-gerenciador-pi.vercel.app');
            console.log(`   Atual: ${url}`);
        }
    } else {
        console.log('‚ùå NEXT_PUBLIC_APP_URL n√£o encontrado no .env.local');
    }
    
    // Verificar Facebook App ID
    const fbAppIdLine = lines.find(line => line.startsWith('NEXT_PUBLIC_FACEBOOK_APP_ID='));
    if (fbAppIdLine) {
        const appId = fbAppIdLine.split('=')[1];
        console.log(`üì± Facebook App ID: ${appId}`);
    } else {
        console.log('‚ö†Ô∏è  NEXT_PUBLIC_FACEBOOK_APP_ID n√£o encontrado');
    }
    
} else {
    console.log('‚ùå Arquivo .env.local n√£o encontrado!');
}

console.log('\nüîß Verificando arquivos de configura√ß√£o...');

// Verificar next.config.mjs
const nextConfigPath = path.join(__dirname, 'next.config.mjs');
if (fs.existsSync(nextConfigPath)) {
    console.log('‚úÖ next.config.mjs encontrado');
} else {
    console.log('‚ö†Ô∏è  next.config.mjs n√£o encontrado');
}

// Verificar package.json
const packagePath = path.join(__dirname, 'package.json');
if (fs.existsSync(packagePath)) {
    console.log('‚úÖ package.json encontrado');
    const packageContent = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
    console.log(`üì¶ Nome do projeto: ${packageContent.name}`);
    console.log(`üè∑Ô∏è  Vers√£o: ${packageContent.version}`);
} else {
    console.log('‚ùå package.json n√£o encontrado!');
}

console.log('\nüåê URLs de teste:');
console.log('Modal: https://app-gerenciador-pi.vercel.app/api/auth/facebook/callback');
console.log('Callback: https://app-gerenciador-pi.vercel.app/api/auth/facebook/callback');
console.log('Facebook App: [verificar manualmente no Facebook Developers]');

console.log('\nüìã Pr√≥ximos passos:');
console.log('1. Abra o arquivo debug-facebook-oauth.html no navegador');
console.log('2. Verifique as configura√ß√µes no Facebook Developers Console');
console.log('3. Limpe o cache do navegador');
console.log('4. Teste a conex√£o Meta novamente');

console.log('\n' + '=' .repeat(50));
console.log('‚úÖ Verifica√ß√£o conclu√≠da!');